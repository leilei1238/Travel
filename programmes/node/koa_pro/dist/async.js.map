{"version":3,"sources":["../src/async.js"],"names":["readAsync","data","JSON","parse","console","log","name","init","fs","require","util","promisify","readFile","a"],"mappings":";;;;;;;;;;AA8C8C;;;wFAE9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACqBA,UAAU,gBAAV,CADrB;;AAAA;AACQC,4BADR;AACiD;AAC7CA,+BAAOC,KAAKC,KAAL,CAAWF,IAAX,CAAP;AACAG,gCAAQC,GAAR,CAAYJ,KAAKK,IAAjB;;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;oBAAeC,I;;;;;;;AAhDf,IAAMC,KAAKC,QAAQ,IAAR,CAAX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAMT,YAAYU,KAAKC,SAAL,CAAeH,GAAGI,QAAlB,CAAlB;AAOA,IAAMC,IAAIN,MAAV;AACAH,QAAQC,GAAR,QAAiBQ,CAAjB","file":"async.js","sourcesContent":["const fs = require('fs')\n\n// 第一阶段：回调函数\n// function readFile (cb) {\n//   fs.readFile('./package.json', (err, data) => {\n//     if (err) return cb(err)\n//     cb(data)\n//   })\n// }\n\n// readFile((err, data) => {\n//   if (!err) {\n//     data = JSON.parse(data)\n//     console.log(data.name)\n//   }\n// })\n\n// 第二阶段：promise\n// function readFileAsync (path) {\n//   return new Promise((resolve, reject) => {\n//     fs.readFile(path, (err, data) => {\n//       if (err) reject(err)\n//       else resolve(data)\n//     })\n//   })\n// }\n\n// readFileAsync('./package.json')\n//   .then(data => {\n//     data = JSON.parse(data)\n//     console.log(data.name)\n//   })\n//   .catch(err => {\n//     console.log(err)\n//   })\n\n// 第三阶段： co+Generator+promise\n// const co = require('co')\n// const util = require('util')\n// co(function * () {\n//   let data = yield util.promisify(fs.readFile)('./package.json')\n//   data = JSON.parse(data)\n//   console.log(data.name)\n// })\n//第四阶段 Async 统一世界\nconst util = require('util')\nconst readAsync = util.promisify(fs.readFile) // 返回promise\n\nasync function init(){\n    let data = await readAsync('./package.json') //返回promise\n    data = JSON.parse(data)\n    console.log(data.name)\n}\nconst a = init()\nconsole.log(`a ${a}`)"]}