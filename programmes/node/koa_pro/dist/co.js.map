{"version":3,"sources":["../src/co.js"],"names":["run","generator","iterator","it","next","promise","value","then","it2","data","promise2","data2","fetch","res","json","movie","summary","console","log"],"mappings":";;;;;;;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,SAASA,GAAT,CAAcC,SAAd,EAAyB;AACvB,MAAMC,WAAWD,WAAjB;AACA,MAAME,KAAKD,SAASE,IAAT,EAAX;AACA,MAAMC,UAAUF,GAAGG,KAAnB;;AAEAD,UAAQE,IAAR,CAAa,gBAAQ;AACnB,QAAMC,MAAMN,SAASE,IAAT,CAAcK,IAAd,CAAZ;AACA,QAAMC,WAAWF,IAAIF,KAArB;;AAEAI,aAASH,IAAT,CAAc,iBAAS;AACrBL,eAASE,IAAT,CAAcO,KAAd;AACD,KAFD;AAGD,GAPD;AAQD;AACDX,6CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACgBY,MAAM,yCAAN,CADhB;;AAAA;AACIC,aADJ;AAAA;AAAA,iBAGkBA,IAAIC,IAAJ,EAHlB;;AAAA;AAGIC,eAHJ;AAIIC,iBAJJ,GAIcD,MAAMC,OAJpB;;;AAMFC,kBAAQC,GAAR,CAAY,SAAZ,EAAuBF,OAAvB;;AANE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAJ","file":"co.js","sourcesContent":["// const co = require('co')\n// const fetch = require('node-fetch')\n\n// co(function * () {\n//   const res = yield fetch('https://api.douban.com/v2/movie/1291843')\n\n//   const movie = yield res.json()\n//   const summary = movie.summary\n\n//   console.log('summary', summary)\n// })\n//co中不能yield 字符串和布尔值； 执行co的过程，总能返回一个promise；在promise内部不断判断是否迭代完成\n\nfunction run (generator) {\n  const iterator = generator()\n  const it = iterator.next()\n  const promise = it.value\n\n  promise.then(data => {\n    const it2 = iterator.next(data)\n    const promise2 = it2.value\n\n    promise2.then(data2 => {\n      iterator.next(data2)\n    })\n  })\n}\nrun(function *() {\n  const res = yield fetch('https://api.douban.com/v2/movie/1291843')\n\n  const movie = yield res.json()\n  const summary = movie.summary\n\n  console.log('summary', summary)\n})\n"]}